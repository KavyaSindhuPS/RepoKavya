{
	"name": "Dataflow_union",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "InputDataDeptSrc1Union",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "InputDataDeptSrc2Union",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OutputFilterDelimitedText1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"linkedService": {
						"referenceName": "Linkedservice_AzureBlobStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink2",
					"rejectedDataLinkedService": {
						"referenceName": "Linkedservice_AzureBlobStorage",
						"type": "LinkedServiceReference"
					}
				},
				{
					"linkedService": {
						"referenceName": "Linkedservice_AzureBlobStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "union1"
				},
				{
					"name": "split1"
				},
				{
					"name": "cast1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          deptno as string,",
				"          dname as string,",
				"          sal as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          edeptno as string,",
				"          edname as string,",
				"          esal as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1, source2 union(byName: false)~> union1",
				"cast1 split(deptno=='10',",
				"     deptno=='20',",
				"     deptno=='30',",
				"     disjoint: false) ~> split1@(dept10, dept20, deptno30)",
				"union1 cast(output(",
				"          deptno as integer,",
				"          sal as integer",
				"     ),",
				"     errors: true) ~> cast1",
				"split1@dept10 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Output_union'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"split1@dept20 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'kavya91container',",
				"     folderPath: 'Output',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['dept20.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          deptno,",
				"          dname,",
				"          sal",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink2",
				"split1@deptno30 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'kavya91container',",
				"     folderPath: 'Output',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['dept30.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink3"
			]
		}
	}
}